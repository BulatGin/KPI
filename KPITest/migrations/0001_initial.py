# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-19 08:27
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Название')),
                ('address', models.CharField(blank=True, max_length=80, null=True, verbose_name='Адрес')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('age', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Возраст')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='img/', verbose_name='Фото')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='files/', verbose_name='Файл')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Должность')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('done_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сделано')),
                ('name', models.CharField(max_length=40, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Отчёт')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('date', models.DateField(verbose_name='Дата конца')),
                ('count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Кол-во')),
            ],
        ),
        migrations.CreateModel(
            name='TaskContext',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='context',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='KPITest.TaskContext', verbose_name='Контекст'),
        ),
        migrations.AddField(
            model_name='task',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='KPITest.Department', verbose_name='Поручено (отдел)'),
        ),
        migrations.AddField(
            model_name='task',
            name='employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='KPITest.Employee', verbose_name='Поручено (сотрудник)'),
        ),
        migrations.AddField(
            model_name='task',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='KPITest.Task'),
        ),
        migrations.AddField(
            model_name='report',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='KPITest.Task', verbose_name='Задание'),
        ),
        migrations.AddField(
            model_name='file',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='KPITest.Report', verbose_name='Отчёт'),
        ),
        migrations.AddField(
            model_name='employee',
            name='position',
            field=models.ManyToManyField(related_name='employees', to='KPITest.Position', verbose_name='Должности'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='department',
            name='directors',
            field=models.ManyToManyField(related_name='departments_d', to='KPITest.Employee', verbose_name='Руководители'),
        ),
        migrations.AddField(
            model_name='department',
            name='employees',
            field=models.ManyToManyField(blank=True, related_name='departments_e', to='KPITest.Employee', verbose_name='Сотрудники'),
        ),
        migrations.AddField(
            model_name='department',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='KPITest.Department'),
        ),
    ]
